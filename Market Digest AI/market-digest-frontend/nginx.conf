events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Enable debug logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;
    
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;
        
        # Proxy API calls to backend - HIGHEST PRIORITY (regex with higher precedence)
        location ~ ^/api/(.*)$ {
            # Force API content type
            add_header Content-Type "application/json" always;
            
            # Proxy to backend
            proxy_pass https://market-digest-backend.onrender.com/api/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Accept "application/json";
            proxy_set_header Cache-Control "no-cache";
            
            # Add debug headers
            add_header X-Debug-Proxy "true";
            add_header X-Debug-Request-URI $request_uri;
            add_header X-Debug-Proxy-Pass "https://market-digest-backend.onrender.com/api/$1";
            
            # Prevent caching and force fresh responses
            add_header Cache-Control "no-cache, no-store, must-revalidate, private";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Vary "Accept-Encoding";
            
            # Handle proxy errors
            proxy_intercept_errors on;
            error_page 502 503 504 = @fallback;
        }
        
        # Fallback for proxy errors
        location @fallback {
            add_header Content-Type "application/json";
            return 502 '{"error": "Backend service unavailable", "message": "Proxy failed to connect to backend"}';
        }
        
        # Serve React app - LOWER PRIORITY
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
}
